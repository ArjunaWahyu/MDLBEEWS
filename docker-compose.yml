version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    container_name: zookeeper
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka_network

  kafka:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      # KAFKA_LOG_RETENTION_MS: 600000  # 10 menit
      # KAFKA_LOG_SEGMENT_BYTES: 1048576  # 1 MB
      # KAFKA_LOG_RETENTION_BYTES: 1073741824  # 1 GB
      # KAFKA_HEAP_OPTS: "-Xmx256m -Xms256m -XX:+UseG1GC"  # Set JVM heap size to 256MB
      KAFKA_NUM_PARTITIONS: 6
    deploy:
      resources:
        limits:
          memory: 1G
    networks:
      - kafka_network
    depends_on:
      - zookeeper

  # mongo:
  #   image: mongo
  #   restart: always
  #   ports:
  #     - 27017:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   volumes:
  #       - ./mongo:/data/db
  #   networks:
  #     - mongo_network

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH_USERNAME: admin
  #     ME_CONFIG_BASICAUTH_PASSWORD: password
  #   networks:
  #     - mongo_network
  #   depends_on:
  #     - mongo

  # influxdb:
  #   image: influxdb:latest
  #   container_name: influxdb
  #   ports:
  #     - "8086:8086"
  #   volumes:
  #     - ./influxDB:/var/lib/influxdb
  #   networks:
  #     - influxdb_network
  #   env_file:
  #     - ./influxDB/.env
  #   restart: always

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "4000:3000"  # Menggunakan port 4000 untuk Grafana
  #   networks:
  #     - influxdb_network
  #   environment:
  #     GF_SERVER_ROOT_URL: http://localhost:4000  # Memastikan URL root sesuai
  #     GF_SECURITY_ADMIN_USER: admin
  #     GF_SECURITY_ADMIN_PASSWORD: 12345678
  #   volumes:
  #     - ./grafana:/var/lib/grafana
  #   restart: always
  #   depends_on:
  #     - influxdb

  data_provider:
    container_name: data_provider
    build:
      context: ./data_provider
    networks:
      - kafka_network
    tty: true
    deploy:
      resources:
        limits:
          memory: 1G
    depends_on:
      - kafka
    restart: always

  # data_consumer:
  #   build:
  #     context: ./data_consumer
  #   deploy:
  #     replicas: 1
  #   networks:
  #     - kafka_network
  #   tty: true
  #   depends_on:
  #     - kafka
  #   restart: always

  p_wave_detector:
    build:
      context: ./p_wave_detector
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    deploy:
      replicas: 2
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
        limits:
          memory: 4G
    networks:
      - kafka_network
      - influxdb_network
    tty: true
    depends_on:
      - kafka
    restart: always

  loc_mag_detector:
    build:
      context: ./loc_mag_detector
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    deploy:
      replicas: 1
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
        limits:
          memory: 4G
    networks:
      - kafka_network
      - influxdb_network
    tty: true
    depends_on:
      - kafka
    restart: always

  # data_saver:
  #   build:
  #     context: ./data_saver
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 1G
  #   volumes:
  #     - ./data_saver/data_archive:/mnt/data
  #   networks:
  #     - kafka_network
  #     - influxdb_network
  #     - mongo_network
  #   tty: true
  #   depends_on:
  #     - kafka
  #     - influxdb
  #     - mongo
  #     - mongo-express
  #   restart: always

  api_server:
    container_name: api_server
    build:
      context: ./api_server
    ports:
      - "3333:3333"
    networks:
      - kafka_network
    tty: true
    deploy:
      resources:
        limits:
          memory: 1G
    depends_on:
      - kafka
    restart: always

  # fast_api:
  #   container_name: fast_api
  #   build:
  #     context: ./fast_api
  #   ports:
  #     - "3333:3333"
  #   networks:
  #     - kafka_network
  #   tty: true
  #   depends_on:
  #     - kafka
  #   restart: always

networks:
  kafka_network:
    driver: bridge
  influxdb_network:
    driver: bridge
  mongo_network:
    driver: bridge